{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `bench`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"vendor\\chrono-0.4.37\\src\\lib.rs","byte_start":23712,"byte_end":23729,"line_start":505,"line_end":505,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"#![cfg_attr(feature = \"bench\", feature(test))] // lib stability features as per RFC #507","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `__internal_bench`, `alloc`, `android-tzdata`, `arbitrary`, `clock`, `default`, `iana-time-zone`, `js-sys`, `libc`, `now`, `oldtime`, `pure-rust-locales`, `rkyv`, `rkyv-16`, `rkyv-32`, `rkyv-64`, `rkyv-validation`, `rustc-serialize`, `serde`, `std`, `unstable-locales`, `wasm-bindgen`, `wasmbind`, `winapi`, and `windows-targets`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `bench` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `bench`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mvendor\\chrono-0.4.37\\src\\lib.rs:505:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m505\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg_attr(feature = \"bench\", feature(test))] // lib stability features as per RFC #507\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `__internal_bench`, `alloc`, `android-tzdata`, `arbitrary`, `clock`, `default`, `iana-time-zone`, `js-sys`, `libc`, `now`, `oldtime`, `pure-rust-locales`, `rkyv`, `rkyv-16`, `rkyv-32`, `rkyv-64`, `rkyv-validation`, `rustc-serialize`, `serde`, `std`, `unstable-locales`, `wasm-bindgen`, `wasmbind`, `winapi`, and `windows-targets`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `bench` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 1 warning emitted\u001b[0m\n\n"}
